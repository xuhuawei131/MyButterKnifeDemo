package com.xuhuawei.compiler.writer;

import com.xuhuawei.compiler.annotation.ViewInjector;
import com.xuhuawei.compiler.bean.InjectInfo;

import java.io.IOException;
import java.io.Writer;

import javax.annotation.processing.ProcessingEnvironment;
import javax.lang.model.element.VariableElement;

/**
 * public class MainActivity$InjectAdapter implements InjectAdapter {
 *   public void injects(MainActivity target) {
 *     target.text = ViewFinder.findViewById(target,2131099648);
 *     target.btn = ViewFinder.findViewById(target,2131099649);
 *   }
 * }
 */
public class DefaultWriterApt extends AptAbstractWriter {

    public DefaultWriterApt(ProcessingEnvironment mProcessingEnv) {
        super(mProcessingEnv);
    }

    @Override
    protected void generateImport(Writer writer, InjectInfo info) throws IOException{
        writer.write("package "+info.packageName +";");
        writer.write("\n\n");
        writer.write("import com.xuhuawei.compiler.ViewInjectorInterface;");
        writer.write("\n");
        writer.write("import com.xuhuawei.aptapi.ViewFinder;");
        writer.write("\n\n\n");
        writer.write("/*This class is generated by JasonKnife, do not modify!*/");
        writer.write("\n");
        writer.write("public class "+info.newClassName+" implements ViewInjectorInterface<"+info.className+"> { ");
        writer.write("\n");
        writer.write("\n");
        writer.write("public void injects("+info.className+" target)  {");
        writer.write("\n");
    }

    @Override
    protected void writeField(Writer writer, VariableElement element, InjectInfo info)throws IOException {
        ViewInjector viewInjector = element.getAnnotation(ViewInjector.class);
        String fieldName = element.getSimpleName().toString();
        int id = viewInjector.value();
        writer.write("target."+fieldName+" =  ViewFinder.findViewById(target, "+id+");");
        writer.write("\n");
    }

    @Override
    protected void writeEnd(Writer writer)throws IOException {
        writer.write("  }");
        writer.write("\n\n");
        writer.write(" }");
    }
}
